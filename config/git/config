# vim: ft=gitconfig :

[alias]
	aliases  = !git config --get-regexp alias | sed -e 's/^alias\\.\\(.*\\)$/\\1/' -e 's/^\\([^ ]\\{1,\\}\\) \\(.*\\)$/\\1 = \\2/'
	share    = !git daemon --reuseaddr --base-path=./.git --verbose --export-all
	unstaged = reset HEAD --

	graph = log --graph --abbrev-commit --decorate --date=relative --all

	### Logs
	lc       = log ORIG_HEAD.. --stat --no-merges
	lg = log --graph --pretty=format:'%C(yellow)%h%C(reset) %C(cyan)%cr%C(reset) %C(white)%<(70,trunc)%s%C(reset) %C(green)%aN%C(reset) %C(auto)%d%C(reset)'
	ls = log --pretty=format:'%C(yellow)%h%C(reset) %C(cyan)%cr%C(reset) %C(white)%<(70,trunc)%s%C(reset) %C(green)%aN%C(reset) %C(auto)%d%C(reset)'
	home = rev-parse --show-toplevel
	paf = fetch --all --prune --prune-tags

	# gh -- GitHub CLI
	fork = !gh repo fork

	### shorts
	aa = add --all
	ap = add --patch
	ca = commit --amend
	cah = commit --amend -CHEAD
	ci = commit --verbose
	cm = commit -m
	co = checkout
	d  = diff
	dc = diff --cached
	l  = log -1
	pt = !git push && git push --tags
	rv = remote -v
	s  = status --short --branch --show-stash
	ss = status --show-stash
	st = status --show-stash
	sv = status --verbose
	sw = switch
	up = !git fetch && git rebase
	w  = whatchanged

	show-merged = ! git for-each-ref --format='if not %(refname:short) in [\"master\", \"main\", \"dev\"]: print(%(refname:short))' --python refs/heads | python3
	show-merged-zero = ! git for-each-ref --format='if not %(refname:short) in [\"master\", \"main\", \"dev\"]: print(%(refname:short), end=\"\\0\")' --python refs/heads | python3

	show-gone = ! git for-each-ref --format='if %(upstream:track) == \"[gone]\": print(%(refname:short))' --python | python3
	show-gone-zero = ! git for-each-ref --format='if %(upstream:track) == \"[gone]\": print(%(refname:short), end=\"\\0\")' --python | python3

	nuke-gone = ! git fetch --all --prune --prune-tags && git show-gone-zero | xargs -0t git branch -D
	nuke-merged = ! git fetch --all --prune --prune-tags && git show-merged-zero | xargs -0t git branch -d

[instaweb]
	port = 2001

[color]
	ui = auto

[core]
	excludesfile = ~/.config/git/ignore
	attributesfile = ~/.config/git/attributes
	autocrlf = input
	pager = delta

[merge]
	ff = only

[mergetool]
	keepBackup = false

[mergetool "nvr"]
	cmd = nvr -s -d $LOCAL $BASE $REMOTE $MERGED -c 'wincmd J | wincmd ='

[difftool]
	prompt = false

[diff]
	tool = vscode
	renames = copy
	colorMoved = default

[diff "scpt"]
	textconv = osadecompile
	binary = true

[diff "textract"]
	textconv = textract
	binary = true

[difftool "kitty"]
	cmd = kitty +kitten diff $LOCAL $REMOTE

[difftool "nvr"]
	cmd = nvr -s -d $LOCAL $REMOTE

[difftool "vscode"]
	cmd = code --wait --new-window --diff $LOCAL $REMOTE

[fetch]
	prune = true

[push]
	default = current

[log]
	decorate = short

[grep]
	fullname = true

[tag]
	sort = version:refname

[advice]
	statusHints = false

[help]
	autocorrect = 1

[url "git@github.com:"]
	insteadOf = https://github.com/
	insteadOf = git://github.com/
[url "git@gitlab.com:"]
	insteadOf = https://gitlab.com/

; Added by the GitHub.app
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[diff "plist"]
	textconv = plutil -convert xml1 -o -
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[filter "wordlist"]
	smudge = cat
	clean = env LC_ALL=C sort -u
[filter "itermprofile"]
	clean = json-canonicalizer
	smudge = cat
[pull]
	ff = only
[delta]
	keep-plus-minus-markers = true
	syntax-theme = DarkNeon
[init]
	defaultBranch = main
	templatedir = ~/.config/git/templates
[include]
	path = ~/.config/git/local
