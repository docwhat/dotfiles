#!/usr/bin/env zsh
#
# Usage: add-nodejs-cli-tool <npm-package> [<command-name>]
#    or: add-nodejs-cli-tool <existing-nodejs-cli-tool>

set -eu

# defaults
declare -i node_version=10

function error {
  print -P "%B%F{red}ERROR%f%b: $*"
  exit 10
}

function warn {
  print -P "%B%F{yellow}WARNING%f%b: $*"
}

export NODENV_VERSION=$node_version

if [ -z "${1:-}" ] || [[ "${1:-}" = -* ]]; then
  echo "Usage: $0 <npm-package> [<command-name>]"
  exit 0
fi

stub=~/.dotfiles/tag-nodejs/bin/"$(basename "$1")"

if [ -x "$stub" ]; then
  if ! grep -qE '^##marker: NODEJS-CLI-TOOL##$' "$stub"; then
    warn "$stub is not a node-cli stub"
    exit 0
  fi

  # Load prefious variables
  eval "$(grep -E '^(package|command|node_version)=' "$stub")"

  if [ -z "${package:-}" ] && [ -z "${command:-}" ]; then
    error "$stub is a malformed node-cli stub".
  fi
  update=1
  print -P "%F{green}Updating%f $command (from $package; node $node_version)"
else
  package="$1"
  command="${2:-$1}"
  stub=~/.dotfiles/tag-nodejs/bin/"$command"
  update=0

  print -P "%F{yellow}Creating%f $command (from $package; node $node_version)"
fi
prefix="${HOME}/.cache/nodejs-cli-tool/node-${node_version}"
declare -r package command node_version prefix stub update

if ! (( update )) || [ -n "${TOOL_INSTALL:-}" ]; then
  npm install --global --prefix "$prefix" "$package"

  if [ ! -x "$(npm bin --global --prefix "$prefix" 2>/dev/null)/${command}" ]; then
    error "cannot find $command in $package"
  fi
fi

~/.dotfiles/tag-nodejs/local/share/node-cli-template.zsh \
  "$package" \
  "$command" \
  "$node_version" \
  > "${stub}.tmp" || (rm -f "${stub}.tmp" ; false)
mv -f "${stub}.tmp" "${stub}"
chmod +x "${stub}"

if ! (( update )); then
  rcup -K
fi

# EOF
