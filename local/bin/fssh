#!/usr/bin/env zsh

set -euo pipefail

# TODO Maybe keep a history of hosts used?

if [[ -n "${1:-}" && "$1" != -* ]]; then
  default="$1"
  arg_parts=("${(@s/@/)default}")
  if (( $#arg_parts > 1 )); then
    user="${arg_parts[1]}@"
    default="${arg_parts[2]}"
  fi
  shift
fi

typeset -r progname="$0"
typeset -r user="${user:-}"
typeset -r default="${default:-}"
typeset -ra args=("$@")
typeset -Ua khosts=( localhost )

setopt extendedglob

function do_connect {
  case "$progname" in
    *mosh* ) do_mosh "$@" ;;
    *ssh* ) do_ssh "$@" ;;
    * ) echo "${user}${host}" "$args[@]" ;;
  esac
  exit
}

function do_mosh {
  local host=$1

  echo "\$ mosh ${user}${host} $args[@]" 1>&2
  if (( ${+functions[tmux_ssh]} )); then
    exec tmux_mosh "${user}${host}" "$args[@]"
  else
    exec mosh "${user}${host}" "$args[@]"
  fi
}

function do_ssh {
  local host=$1

  echo "\$ ssh ${user}${host} $args[@]" 1>&2
  if (( ${+functions[tmux_ssh]} )); then
    exec tmux_ssh "${user}${host}" "$args[@]"
  else
    exec command ssh "${user}${host}" "$args[@]"
  fi
}

function addhosts {
  local host
  for host; do
    if [[ $host == *[*?]* ]]; then
      continue
    elif [[ $host =~ "\[(.*)\]:\d*" ]]; then
      khosts+=$match
    else
      khosts+=$host
    fi
  done
}

function scan_ssh_configs {
  local config
  local key
  local hosts
  for config in /etc/ssh/ssh_config ~/.ssh/config; do
    if [[ -r "$config" ]]; then
      while IFS=$'=\t ' read -r key hosts; do
        if [[ "$key" != (#i)host ]]; then
          continue
        fi

        addhosts ${(z)hosts}
      done < "$config"
    fi
  done
}

# Gather info from the known_hosts files
for khostfile in /etc/ssh/ssh_known_hosts ~/.ssh/known_hosts; do
  if [[ -r "$khostfile" ]]; then
    potential_khosts=(${(s/,/j/,/u)${(f)"$(<$khostfile)"}%%[ |#]*})
    addhosts "$potential_khosts[@]"
  fi
done

# Remove IP Addresses
khosts=(${${khosts:#(#s)[0-9]##.[0-9]##.[0-9]##.[0-9]##(#e)}:#(#s)[0-9a-f:]##(#e)})


# Gather info from the ssh_config files.
if (( ${+commands[ssh-host-lister]} )); then
  khosts=( "${khosts[@]}" $(ssh-host-lister) )
else
  scan_ssh_configs
  # Remove IP Addresses
  khosts=(${${khosts:#(#s)[0-9]##.[0-9]##.[0-9]##.[0-9]##(#e)}:#(#s)[0-9a-f:]##(#e)})
fi

# Exact Match
if [[ "${khosts[(ie)$default]}" -le ${#khosts} ]]; then
  do_connect "$default"
fi

print -N $khosts |\
  fzf \
  --select-1 \
  --read0 \
  --query="$default" \
  --preview='ping -c1 {}' \
  --preview-window=down:3:hidden:wrap \
  --bind='?:toggle-preview' |\
  IFS=$'\n ' read -r host

do_connect "$host"

# EOF
