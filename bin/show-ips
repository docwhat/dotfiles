#!/usr/bin/ruby
# frozen_string_literal: true

require 'socket'

EXAMPLE_HOSTNAME = ARGV.first || 'foobar'

def default_ip
  # turn off reverse DNS resolution temporarily
  orig = Socket.do_not_reverse_lookup
  Socket.do_not_reverse_lookup = true

  @default_ip ||= UDPSocket.open do |s|
    s.connect '64.233.187.99', 1
    s.addr.last
  end
ensure
  Socket.do_not_reverse_lookup = orig
end

def all_ips
  @all_ips ||= Socket
               .ip_address_list
               .select { |a| a.ipv4? && !a.ipv4_loopback? }
               .map(&:ip_address)
end

def print_ip(ip, default = false)
  puts format(
    '%<symbol>3s %<url>-38s %<ip>s',
    symbol: (default ? '=>' : ' '),
    url: "http://#{EXAMPLE_HOSTNAME}.#{ip}.xip.io",
    ip: ip
  )
end

print_ip default_ip, true
all_ips
  .reject { |ip| ip == default_ip }
  .each { |ip| print_ip ip }

# EOF
