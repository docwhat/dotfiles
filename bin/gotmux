#!/bin/bash
# vi: set ft=sh et sw=2 ts=2 :

set -euo pipefail

function connect {
  if [[ -z "${session}" ]]; then
    session=main
  fi
  if [[ -z "${start_dir}" ]]; then
    start_dir="${HOME}"
  else
    echo "starting in ${start_dir}..."
  fi

  simple_connect "${session}"
}

function simple_connect {
  [[ -n "${start_dir}" ]] && cd "${start_dir}"

  if tmux has-session -t "${session}"; then
    echo -n "[attaching '${session}']"
    exec tmux -u attach -t "${session}"
  else
    echo -n "[starting '${session}']"
    exec tmux -u new-session -s "${session}"
  fi
}

function list {
  if [[ $show_headers = true ]]; then
    echo "Sessions:"
    tmux list-sessions 2> /dev/null
  else
    tmux list-sessions 2> /dev/null | sed 's/:.*//g'
  fi
  exit 0
}

define(){ IFS='\n' read -r -d '' ${1} || true; }

function help {
  echo "$help_text"
  exit 0
}

function helperr {
  echo "ERROR: $*" 1>&2
  echo "$help_text"
  exit 125
}

mode="connect"
typeset start_dir=''
typeset show_headers=true
typeset session=''

define help_text <<HELPTEXT
Usage: $0 [options] [<session>]

-d --directory DIR  Start tmux in this directory.
-l --list           List all sessions.
-h --help           You're soaking in it.
HELPTEXT

while (( "${#*}" > 0 )); do
  case "${1}" in
  --list|-l)
    mode="list"
    ;;
  --help|-h)
    mode="help"
    ;;
  --no-headers|-s)
    show_headers=false
    ;;
  --dir*|-d)
    shift; start_dir="${1}"
    ;;
  *)
    if [ -z "$session" ]; then
      session=$1
    else
      helperr "Only one session can be specified"
    fi
    ;;
  esac
  shift
done

if [ -z "$session" ]; then
  session=main
fi

case "${mode}" in
list) list ;;
help) help ;;
connect) connect "${args[@]:-}" ;;
esac

helperr "Something has gone wrong."

# EOF
