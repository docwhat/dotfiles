#!/usr/bin/env ruby

require 'net/http'
require 'net/https'

def print_response(response)
  puts "#{response.code} #{response.message}"

  response.each do |key, val|
    puts "#{key} = #{val}"
  end
end

url = URI.parse(ARGV.first)

http = Net::HTTP.new(url.host, url.port)

http.open_timeout = http.read_timeout = 10  # Set open and read timeout to 10 seconds
http.use_ssl = (url.scheme == 'https')

puts
puts '## Initial Request'
original_response, _ = http.get(
  url.request_uri,
  'If-Modified-Since'   => '',
  'If-None-Match'       => ''
)

print_response(original_response)

puts
puts '## If-Modified-Since Only'
response, _ = http.get(
  url.request_uri,
  'If-Modified-Since'   => original_response['last-modified'],
  'If-None-Match'       => ''
)
print_response(response)

puts
puts '## If-None-Match Only'
response, _ = http.get(
  url.request_uri,
  'If-Modified-Since'   => '',
  'If-None-Match'       => original_response['etag']
)
print_response(response)

puts
puts '## Both If-Modified-Since and If-None-Match'
response, _ = http.get(
  url.request_uri,
  'If-Modified-Since'   => original_response['last-modified'],
  'If-None-Match'       => original_response['etag']
)
print_response(response)
