#!/usr/bin/env zsh
#DESC# nodenv & plugins #DESC#

set -euo pipefail

DOTFILES_DIR=~/.dotfiles
source "${DOTFILES_DIR}/local/include/hook-helpers.zsh"

typeset -a plugins
plugins=( $(cat "${HOME}/.config/personal/nodenv-plugins") )
typeset -a plugin_names
setopt extendedglob

if [[ -z "${NODENV_ROOT:-}" ]]; then
  echo "NODENV_ROOT is not set; skipping" | colorize red
  exit 0
fi

# We always want this
plugins=( "${plugins[@]}" nodenv/nodenv-update )

if ! (( $+commands[node-build] )); then
  plugins=( "${plugins[@]}" nodenv/node-build)
fi

mkdir -p "${NODENV_ROOT}/plugins"

for plugin in "${plugins[@]}"; do
  typeset name=$(basename "${plugin}")
  plugin_names=( "${plugin_names[@]}" "${name}" )
  if [[ -d "${NODENV_ROOT}/plugins/${name}" ]]; then
    print -P "%B%F{green}[ ]%f ${plugin}%b"
  else
    print -P "%B%F{yellow}[I]%f ${plugin}%b"
    hub clone "${plugin}" "${NODENV_ROOT}/plugins/${name}" |& offset | offset | colorize yellow
  fi
done

for other_dir in "${NODENV_ROOT}/plugins/"*(/N); do
  typeset name=$(basename "${other_dir}")
  if [ ${plugin_names[(i)$name]} -gt ${#plugin_names} ]; then
    print -P "%B%F{red}[R]%f ${name}%b"
    rm -rf "${NODENV_ROOT}/plugins/${name}"
  fi
done

echo
nodenv update --verbose

echo
for node_ver in "${NODENV_ROOT:-${HOME}/.nodenv}"/versions/*(/n:t); do
  print -P "%F{blue}===%F{green}${node_ver}%F{blue}=================================%F{reset}"
  env NODENV_VERSION=${node_ver} npm upgrade --global \
    neovim \
    yarn \
    | offset
done

# EOF
